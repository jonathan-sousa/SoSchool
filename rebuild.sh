#!/bin/bash

echo "üßπ Nettoyage l√©ger de SoSchool..."

# Arr√™ter le simulateur s'il tourne
echo "üõë Arr√™t du simulateur..."
xcrun simctl shutdown all 2>/dev/null || true

# Nettoyer le cache Xcode pour SoSchool uniquement
echo "üóëÔ∏è Nettoyage du cache Xcode..."
rm -rf ~/Library/Developer/Xcode/DerivedData/SoSchool-* 2>/dev/null || true
rm -rf ~/Library/Developer/Xcode/DerivedData/*/Build/Products/Debug-iphonesimulator/SoSchool.app 2>/dev/null || true

# Nettoyer uniquement les donn√©es de SoSchool dans le simulateur (sans effacer tout)
echo "üóëÔ∏è Suppression des donn√©es de l'application SoSchool..."
SIMULATOR_DEVICES=$(xcrun simctl list devices | grep "iPhone" | grep -v "unavailable" | head -1 | sed 's/.*(\([^)]*\)).*/\1/')
if [ ! -z "$SIMULATOR_DEVICES" ]; then
    # Supprimer uniquement l'app SoSchool si elle existe
    xcrun simctl uninstall "$SIMULATOR_DEVICES" JS-Consulting.SoSchool 2>/dev/null || true
    echo "‚úÖ Donn√©es de SoSchool supprim√©es du simulateur"
else
    echo "‚ö†Ô∏è Aucun simulateur iPhone trouv√©"
fi

# Build et installation
echo "üî® Build de l'application..."
xcodebuild build -project SoSchool.xcodeproj -scheme SoSchool -destination 'platform=iOS Simulator,name=iPhone 16'

if [ $? -eq 0 ]; then
    echo "üì± Installation de l'application..."
    xcodebuild install -project SoSchool.xcodeproj -scheme SoSchool -destination "platform=iOS Simulator,name=iPhone 16"

    if [ $? -eq 0 ]; then
        echo "üéØ Lancement de l'application..."
        xcrun simctl launch booted JS-Consulting.SoSchool

        echo "‚úÖ Rebuild termin√© ! L'application devrait maintenant fonctionner sans crash."
        echo ""
        echo "üí° Si le probl√®me persiste, essayez de :"
        echo "   1. Red√©marrer Xcode"
        echo "   2. Red√©marrer le Mac"
        echo "   3. V√©rifier les logs dans la console Xcode"
    else
        echo "‚ùå Erreur lors de l'installation"
        exit 1
    fi
else
    echo "‚ùå Erreur lors du build"
    exit 1
fi
